.. highlight:: rest.. _sec-parameters:Parameter Specifications========================Creating the parameter file---------------------------This section provides comprehensive documentation on the creation and formatting of parameter files (``*.param``). Here are the basic guidelines:* Most parameters come with predefined values (indicated in ``[]`` below). When a parameter is not specified in the parameter file, the default value will be assumed.* The arrangement of parameters in the file doesn't need to follow a specific order.* Certain parameters only take effect under specific conditions; when these conditions are not met, the related parameters will be ignored.* Lines beginning with ``#`` in the ``.param`` file are considered comments and will be automatically ignored.* The specification of parameters within the file follows this syntax:.. code-block:: console    parameter1    value1    parameter2    value2    ...           .. _ssec-basic-params:    Basic parameters----------------These set the basic parameters for the run.* ``model_name [def_name]``: The model name. This sets the prefix for all output filenames. Include only alphabets, numbers, and '_'.* ``out_dir [def_dir]``: The directory for output files. This is the absolute path in which output files will be stored. The default directory is the root directory in which WARPFIELD is being run.* ``verbose [2]``: The output intensity level in terminal. ``1`` for minimal output, ``2`` for basic output, and ``3`` for everything. * ``output_format [ASCII]``: The output format. In the future we will implement options for FITS files.Main parameters for WARPFIELD ------------------------------These are the main parameters which WARPFIELD depends on. * ``rand_input [0]``: Enable random input parameters? ``1`` to enable randomiser, ``0`` to disable. If ``1``, WARPFIELD will generate randomised inputs of ``log_mCloud``, ``sfe``, ``nCore``, and ``metallicity``. The user must then define the limits of the randomiser:    * ``rand_log_mCloud [5, 7.47]`` (:math:`M_\odot`): Log cloud mass    * ``rand_sfe [0.01, 0.10]``: Star formation effeciency    * ``rand_nCore [100, 1000]`` (cm\ :math:`^{-3}`): Number density of cloud core    * ``rand_metallicity [0.15, 1]`` (:math:`Z_\odot`): Cloud metallicity* ``log_mCloud [9.0]`` (:math:`M_\odot`):  Log cloud mass. This will be the initial mass of the molecular cloud. This parameter is ignored if ``rand_input`` is set to ``1``.* ``mCloud_beforeSF [1]``: Is ``log_mCloud`` given as mass before or after cluster formation? ``0`` indicates after star formation, and ``1`` indicates indicates before.* ``sfe [0.01]``: Star formation effeciency (``0 < sfe < 1``). This sets the fraction of cloud mass that is converted into the mass of the initial star cluster. This parameter is ignored if ``rand_input`` is set to ``1``.* ``nCore [1e4]`` (cm\ :math:`^{-3}`): Number density of cloud core (unit: :math:`Z_\odot`). This parameter is ignored if ``rand_input`` is set to ``1``.* ``metallicity [1]`` (:math:`Z_\odot`): Cloud metallicity. Currently available values are 1 :math:`Z_\odot` and 0.15 :math:`Z_\odot`. This parameter is ignored if ``rand_input`` is set to ``1``.* ``stochastic_sampling [0]``: Include stochastic sampling of IMF in the creation of initial cluster? If set to ``0``, ignore stochastic sampling and apply scaling relations when computing cluster properties assuming that the IMF is fully sampled. This parameter is ignored if ``rand_input`` is set to ``1``. The user must then define ``n_trails``:    * ``n_trials``: How many iterations / how many SLUG cluster do you want to create? As a rule of thumb we suggest:        .. math:: {\rm n\_trials} \sim \lceil 10^6/{\rm mCluster} \rceil \sim \lceil 10^6/({\rm mCloud} \times {\rm sfe}) \rceil            In other words, for high mass clusters where we expect fully sampled IMF, there is no need for a lot of iterations; conversely, for low mass clusters where stochasticity is important, we require more iterations for better understanding of the distribution of outputs (such as the ionising luminosity).Parameters for the density profile of the cloud-----------------------------------------------This section sets the density profile, :math:`\rho(r)`, of the cloud.* ``dens_profile [pL_prof]``: How does the density scale with radius? Available parameters:        * ``bE_prof``: [Future updates] Bonnor-Ebert sphere profile (see `Ebert 1955 <https://ui.adsabs.harvard.edu/abs/1955ZA.....37..217E/abstract>`_; `Bonnor 1956 <https://ui.adsabs.harvard.edu/abs/1956MNRAS.116..351B/abstract>`_).        * ``dens_g_bE [14.1]``: If Bonnor-Ebert is selected, then the user must also define the parameter :math:`g_{\rm BE} = \frac{\rho_{\rm centre}}{\rho_{\rm edge}}`, such that all clouds exceeding this value are gravitationally unstable. The corresponding mass is the critical mass known as the Bonner-Ebert mass (e.g., see `Stahler and Palla 2004 <https://ui.adsabs.harvard.edu/abs/2004fost.book.....S/abstract>`_).     * ``pL_prof``: Power-law profile. Setting ``dens_a_pL = 0`` (see below) gives a homogeneous cloud, whereas ``dens_a_pL = -2`` gives an isothermal sphere.         * ``dens_a_pL [0]``: If power-law is selected, then the user must also define the power-law coefficient :math:`\alpha`, which takes value between :math:`-2\leq\alpha<0`. Suppose that :math:`r_0` is the core radius, :math:`\rho_0` is the core density, and :math:`\rho_{\rm ambISM}` is the density of the ISM, then :math:`\alpha` is defined such that:        .. math:: \rho_{\rm cloud}(r) = \left\{\begin{array}{lll} \rho_0 , & r \leq r_0 \\ \rho_0 \times (r / r_0)^\alpha, & r_0 < r \leq r_{\rm cloud} \\ \rho_{\rm ambISM}, & r > r_{\rm cloud} \end{array} \right.        * ``dens_navg_pL [1e4]`` (cm\ :math:`^{-3}`): If power-law is selected, then the user must also define the average number density of the cloud.               Parameters for Starburst99 operations (if used)-----------------------------------------------The purpose of this section is to tell WARPFIELD which SB99 file (from your folder) do you wish to use in the current run.For more information, see `Starburst99 <https://www.stsci.edu/science/starburst99/docs/run.html>`_. Note: This does not automatically create a Starburst99 file!* ``SB99_mass [1e6]`` (:math:`M_\odot`): What is the default star cluster mass in SB99? This will be used for scaling relation in outputs.* ``SB99_rotation [1]``: Are we consdering rotating or non-rotating stars in the stellar track? Rotation extends stellar lifetime due to mixing and being nitrogen-rich, plus it mixes fresh hydrogen into the core, prolonging fusion.* ``SB99_BHCUT [120]`` (:math:`M_\odot`): What is the black hole cutoff mass (unit: Msol)? Stars with ZAMS masses below this parameter form supernovae. For instance, ``SB99_BHCUT = 40`` results in SNe only from the mass range 40 to 8 :math:`M_\odot`. * ``f_Mcold_wind [0]``, ``f_Mcold_SN [0]``: Add fraction of mass injected into the cloud due to sweeping of cold material from protostars and disks inside star clusters? This will affect in particular the total mass loss rate of cluster, and consequently the escape velocity (e.g., see `Stevens and Hartwell 2003 <https://ui.adsabs.harvard.edu/abs/2003MNRAS.339..280S/abstract>`_).* ``thermcoeff_wind [1]``, ``thermcoeff_SN [0]``: The thermalisation efficiency :math:`\eta` for colliding winds and supernova ejecta, i.e., the fraction of kinetic energy of stars and supernova in the cluster that is thermalised. See `Stevens and Hartwell 2003 <https://ui.adsabs.harvard.edu/abs/2003MNRAS.339..280S/abstract>`_ or `Kavanagh 2020 <https://ui.adsabs.harvard.edu/abs/2020Ap%26SS.365....6K/abstract>`_ for a review.* ``v_SN [1e4]`` (kms\ :math:`^{-1}`): What is the velocity of supernova ejecta? Parameters for setting library paths------------------------------------This section sets the path to libraries. Please provide absolute paths.* ``path_cooling_CIE [3]``: Path to cooling curve FILE would you like to use for collisional ionization equilibrium (CIE)? This is the cooling curve to use for T > 10^5.5 K. Accept either available numbers or string such as: ``path/to/warpfield/lib/cooling_tables/opiate/file``.    * 1: CLOUDY cooling curve for HII region, solar metallicity.    * 2: CLOUDY cooling curve for HII region, solar metallicity. Includes the evaporative (sublimation) cooling of icy interstellar grains (occurs e.g., when heated by cosmic-ray particle)    * 3. Gnat and Ferland 2012 (slightly interpolated for values)    * 4. Sutherland and Dopita 1993, for [Fe/H] = -1].* ``path_cooling_nonCIE [def_dir]``: Path to cooling curve FOLDER would you like to use for non-CIE (T < 10^5.5 K). Default: ``path/to/warpfield/lib/cooling_tables/CIE/current/``.* ``path_sps [def_dir]``: PPath to starburst99 files? Default: ``path/to/warpfield/lib/sps/starburst99/``.        Other parameters----------------Here, we offer users the option to fine-tune the values of these parameters; however, it's worth noting that these are primarily standard constants and are rarely altered. Unless needed, it's advised to retain them at their default settings.* ``mu_n [2.1287915392418182e-24]`` (:math:`g`): The mean mass per nucleus. We assume the standard composition of 1 He atom every 10 H atoms. By default, :math:`\mu_{\rm n} = (14/11)m_{\rm H}`.* ``mu_p [1.0181176926808696e-24]`` (:math:`g`): The mean mass per particle. We assume the standard composition of 1 He atom every 10 H atoms. By default, :math:`\mu_{\rm p} = (14/23)m_{\rm H}`.* ``nISM [0.1]`` (cm\ :math:`^{-3}`): The number density of the ambient ISM.       * ``t_ion [1e4]`` (:math:`T`): Temperature of ionised region.* ``t_neu [1e2]`` (:math:`T`): Temperature of neutral region.* ``sigma0 [1.5e-21]`` (cm\ :math:`^2`): Dust cross-section at solar metallicity. Thus for other metallicities the dust cross section is scaled as :math:`\sigma_d = \sigma_0 * (Z/Z_\odot)`.* ``z_nodust [0.05]`` (:math:`Z_\odot`): Metallicity below which there is effectively no dust, i.e., :math:`\sigma_d = 0` (unit: :math:`Z_\odot`). * ``gamma_adia [1.6666666666666667]``: The adiabatic index (:math:`\gamma_{\rm adia} = 5/3`).* ``gamma_mag [1.3333333333333333]``: The effective magnetic adiabatic index (:math:`\gamma_{\rm mag} = 4/3`). Setting to ``0`` implies a constant magnetic field strength throughout the model, whereas ``4/3`` implies conservation of magnetic flux and is what would be expected in the absence of dynamo action or magnetic reconnection (sphere). See `Henney et al 2005 <https://ui.adsabs.harvard.edu/abs/2005ApJ...621..328H/abstract>`_, Appendix C.* ``alpha_B [2.59e-13]`` (cm\ :math:`^{3}`/s): The case B recombination coefficient. See `Osterbrock and Ferland 2006 <https://ui.adsabs.harvard.edu/abs/2006agna.book.....O/abstract>`_.     * ``kappa_IR [4]`` (cm\ :math:`^{2}`/g): The Rosseland mean dust opacity :math:`\kappa_{\rm IR}`. For simplicity we do not include the dependency of :math:`\kappa_{\rm IR}` wish dust temperature, but adopt a constant value. This parameter relates to the calculation of :math:`\tau_{\rm IR}`, the optical depth of the shell in the IR by: .. math:: \tau_{\rm IR} = \kappa_{\rm IR} \int \mu_n n_{\rm sh} {\rm d}r